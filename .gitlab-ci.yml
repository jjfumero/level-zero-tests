image: docker:stable

variables:
  # When using dind service we need to instruct docker, to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # Note that if you're using the Kubernetes executor, the variable should be set to
  # tcp://localhost:2375/ because of how the Kubernetes executor connects services
  # to the job container
  DOCKER_HOST: tcp://localhost:2375/
  #
  # For non-Kubernetes executors, we use tcp://docker:2375/
  # DOCKER_HOST: tcp://docker:2375/
  # When using dind, it's wise to use the overlayfs driver for
  # improved performance.
  DOCKER_DRIVER: overlay2

stages:
  - docker-build
  - build

services:
  - docker:dind

before_script:
  # need to get a CaaS harbor registry setup, using Lisanna's private registry for now
  - docker login -u ${REGISTRY_USER} -p ${REGISTRY_PASSWORD} ${REGISTRY_HOST}
  - docker info

ubuntu1804-image:
  stage: docker-build
  only: ['branches', 'tags', 'merge_requests', 'pushes']
  tags: ['caas', 'docker', 'linux']
  variables:
    BUILDER_TAG: ${CI_REGISTRY_IMAGE}/${CI_PROJECT_NAME}-ubuntu1804:${CI_COMMIT_REF_SLUG}
  script:
    # Build the Docker image, using the previous images as the cache sources
    - docker pull ${BUILDER_TAG} || true
    - docker build --cache-from ${BUILDER_TAG} -t ${BUILDER_TAG} -t ${BUILDER_IMAGE_HASH_TAG} --build-arg GITLAB_ONEAPI_READKEY=${GITLAB_ONEAPI_READKEY} ./docker/ubuntu1804
    - docker push ${BUILDER_TAG}

ubuntu1804:
  stage: build
  only: ['branches', 'tags', 'merge_requests', 'pushes']
  tags: ['caas', 'docker', 'linux']
  variables:
    BUILDER_TAG: ${CI_REGISTRY_IMAGE}/${CI_PROJECT_NAME}-ubuntu1804:${CI_COMMIT_REF_SLUG}
  script:
    - docker pull ${BUILDER_TAG} || true
    - docker run --rm -v ${PWD}:/root/project -w /root/project --env-file ./ci-env ${BUILDER_TAG} ./ci-build.sh
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - build/intel-loki-perftests-*-Source.*
      - build/intel-loki-perftests-*-Linux.*
